rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {

        function isAuth() {
            return request.auth != null;
        }
        function isUserAuth(userId) {
            return request.auth != null && request.auth.uid == userId;
        }
        function userPath(userId) {
            return /databases/$(database)/documents/users/$(userId);
        }
        function projectPath(projectId) {
            return /databases/$(database)/documents/projects/$(projectId);
        }
        function isMemberOfProject() {
            return userPath(request.auth.uid) in request.resource.data.members;
        }
        function isMemberOf(projectId) {
            return userPath(request.auth.uid)
                in get(projectPath(projectId)).data.members;
        }

        match /clients/{userId} {
            allow read, write: if isUserAuth(userId);
        }

        match /users/{userId} {
            allow get: if isAuth();
            allow write: if isUserAuth(userId);
        }

        match /projects/{projectId} {
            allow get: if isAuth();
            allow read, write: if isAuth() && isMemberOfProject();
        }
        match /projects/{projectId}/works/{workId} {
            allow read, write: if isAuth() && isMemberOf(projectId);
        }
    }
}
